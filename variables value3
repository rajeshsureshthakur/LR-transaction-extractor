import java.io.*;
import java.util.*;

public class CSVProcessor {
    // Define the 6 transaction names
    private static final String TRANSACTION1 = "Transaction1";
    private static final String TRANSACTION2 = "Transaction2";
    private static final String TRANSACTION3 = "Transaction3";
    private static final String TRANSACTION4 = "Transaction4";
    private static final String TRANSACTION5 = "Transaction5";
    private static final String TRANSACTION6 = "Transaction6";

    // Define the API to search for
    private static final String TARGET_API = "YourAPIName"; // Replace with your API name

    private static class TransactionData {
        String responseTime = "0";
    }

    private static class ThirdFileData {
        double sumColumnB = 0.0;
        double sumColumnC = 0.0;
        double sumColumnE = 0.0;
        double sumColumnF = 0.0;
    }

    private static class TPHData {
        String tph1File1 = "0";  // TPH1 from first file
        String tph2File1 = "0";  // TPH2 from first file
        String tph1File2 = "0";  // TPH1 from second file
        String tph2File2 = "0";  // TPH2 from second file
    }

    public static void main(String[] args) {
        String file1Path = "input1.csv";
        String file2Path = "input2.csv";
        String file3Path = "input3.csv";
        String tphFile1Path = "tph_file1.csv";
        String tphFile2Path = "tph_file2.csv";
        
        Map<String, TransactionData> transactionMap = new HashMap<>();
        ThirdFileData thirdFileData = new ThirdFileData();
        TPHData tphData = new TPHData();
        
        // Initialize TransactionData objects
        transactionMap.put(TRANSACTION1, new TransactionData());
        transactionMap.put(TRANSACTION2, new TransactionData());
        transactionMap.put(TRANSACTION3, new TransactionData());
        transactionMap.put(TRANSACTION4, new TransactionData());
        transactionMap.put(TRANSACTION5, new TransactionData());
        transactionMap.put(TRANSACTION6, new TransactionData());
        
        try {
            // Process original files
            searchFiles(file1Path, file2Path, transactionMap);
            calculateColumnSums(file3Path, thirdFileData);
            
            // Get TPH values
            getTPHValues(tphFile1Path, tphFile2Path, tphData);
            
            // Print all values
            printTransactionValues(transactionMap);
            printThirdFileValues(thirdFileData);
            printTPHValues(tphData);
            
            System.out.println("Processing completed successfully!");
            
        } catch (Exception e) {
            System.err.println("Error processing files: " + e.getMessage());
            e.printStackTrace();
        }
    }

    private static void getTPHValues(String file1Path, String file2Path, TPHData tphData) 
            throws IOException {
        // Get values from first TPH file
        processTPHFile(file1Path, tphData, true);
        // Get values from second TPH file
        processTPHFile(file2Path, tphData, false);
    }

    private static void processTPHFile(String filePath, TPHData tphData, boolean isFirstFile) 
            throws IOException {
        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
            String line;
            boolean isFirstLine = true;
            
            while ((line = reader.readLine()) != null) {
                if (isFirstLine) {
                    isFirstLine = false;
                    continue;
                }
                
                String[] values = line.split(",(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)", -1);
                
                if (values.length >= 4) {  // Need at least 4 columns (A,B,C,D)
                    String apiName = values[1].trim().replace("\"", ""); // B column
                    
                    if (apiName.equals(TARGET_API)) {
                        // Store TPH values based on which file we're reading
                        if (isFirstFile) {
                            tphData.tph1File1 = values[2].trim().replace("\"", "");
                            tphData.tph2File1 = values[3].trim().replace("\"", "");
                        } else {
                            tphData.tph1File2 = values[2].trim().replace("\"", "");
                            tphData.tph2File2 = values[3].trim().replace("\"", "");
                        }
                    }
                }
            }
        }
    }

    // [Previous methods remain unchanged]
    
    private static void printTPHValues(TPHData tphData) {
        System.out.println("\nTPH Values for API " + TARGET_API + ":");
        System.out.println("===============================");
        System.out.println("File 1 TPH1: " + tphData.tph1File1);
        System.out.println("File 1 TPH2: " + tphData.tph2File1);
        System.out.println("File 2 TPH1: " + tphData.tph1File2);
        System.out.println("File 2 TPH2: " + tphData.tph2File2);
    }

    // [Include all previous methods from the last version]
}
